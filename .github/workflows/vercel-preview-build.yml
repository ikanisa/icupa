name: Vercel Preview Build

on:
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

concurrency:
  group: vercel-preview-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "Vercel build â€“ ${{ matrix.project }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - project: vite-root
            working-directory: .
            project-id-secret: VERCEL_PROJECT_ID_VITE
          - project: next-admin
            working-directory: apps/admin
            project-id-secret: VERCEL_PROJECT_ID_ADMIN
          - project: next-client
            working-directory: apps/client
            project-id-secret: VERCEL_PROJECT_ID_CLIENT
          - project: next-vendor
            working-directory: apps/vendor
            project-id-secret: VERCEL_PROJECT_ID_VENDOR
          - project: next-web
            working-directory: apps/web
            project-id-secret: VERCEL_PROJECT_ID_WEB
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --include-workspace-root --workspaces

      - name: Pull preview environment
        run: npx vercel pull --yes --environment=preview --token="$VERCEL_TOKEN"
        working-directory: ${{ matrix.working-directory }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets[matrix.project-id-secret] }}

      - name: Build preview artifact
        run: npx vercel build --token="$VERCEL_TOKEN"
        working-directory: ${{ matrix.working-directory }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets[matrix.project-id-secret] }}

      - name: Pull production environment
        run: npx vercel pull --yes --environment=production --token="$VERCEL_TOKEN"
        working-directory: ${{ matrix.working-directory }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets[matrix.project-id-secret] }}

      - name: Build production artifact
        run: |
          rm -rf .vercel/output
          npx vercel build --prod --token="$VERCEL_TOKEN"
        working-directory: ${{ matrix.working-directory }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets[matrix.project-id-secret] }}

      - name: Upload Vercel build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vercel-build-${{ matrix.project }}
          path: ${{ matrix.working-directory }}/.vercel/output/logs
          if-no-files-found: warn
