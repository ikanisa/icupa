name: Test Coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: write

jobs:
  coverage:
    name: Test Coverage Gate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '18.18.2'
        cache: 'pnpm'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: '10'
        run_install: false
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run tests with coverage
      env:
        VITE_SUPABASE_URL: https://test.supabase.co
        VITE_SUPABASE_ANON_KEY: test-key
      run: |
        pnpm test -- --coverage --coverage.reporter=json-summary --coverage.reporter=text
    
    - name: Extract coverage percentage
      id: coverage
      run: |
        COVERAGE=$(jq -r '.total.lines.pct' coverage/coverage-summary.json)
        echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT
        echo "Coverage: $COVERAGE%"
    
    - name: Check coverage threshold
      run: |
        COVERAGE=${{ steps.coverage.outputs.percentage }}
        THRESHOLD=70
        echo "Coverage: $COVERAGE%"
        echo "Threshold: $THRESHOLD%"
        
        if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
          echo "❌ Coverage ($COVERAGE%) is below threshold ($THRESHOLD%)"
          echo "Please add tests to improve coverage"
          exit 1
        else
          echo "✅ Coverage ($COVERAGE%) meets threshold ($THRESHOLD%)"
        fi
    
    - name: Generate coverage badge
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.GIST_ID }}
        filename: icupa-coverage.json
        label: coverage
        message: ${{ steps.coverage.outputs.percentage }}%
        valColorRange: ${{ steps.coverage.outputs.percentage }}
        maxColorRange: 100
        minColorRange: 0
    
    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const coverage = '${{ steps.coverage.outputs.percentage }}';
          const threshold = 70;
          const status = parseFloat(coverage) >= threshold ? '✅' : '❌';
          
          const comment = `## ${status} Test Coverage Report
          
          **Coverage:** ${coverage}%
          **Threshold:** ${threshold}%
          **Status:** ${parseFloat(coverage) >= threshold ? 'PASSED' : 'FAILED'}
          
          ${parseFloat(coverage) < threshold ? '⚠️ Coverage is below threshold. Please add tests.' : '✅ Coverage meets the threshold.'}
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        retention-days: 30
