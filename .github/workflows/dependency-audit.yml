name: Dependency Audit

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run daily at 09:00 UTC
    - cron: '0 9 * * *'
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  audit:
    name: Audit Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '18.18.2'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10'
          run_install: false
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run pnpm audit
        id: audit
        run: |
          # Run audit and capture output
          pnpm audit --json > audit-report.json || true
          
          # Check for high/critical vulnerabilities
          if pnpm audit --audit-level=high; then
            echo "status=pass" >> $GITHUB_OUTPUT
          else
            echo "status=fail" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true
      
      - name: Parse audit results
        id: parse
        run: |
          if [ -f audit-report.json ]; then
            # Extract vulnerability counts
            HIGH=$(jq -r '.metadata.vulnerabilities.high // 0' audit-report.json)
            CRITICAL=$(jq -r '.metadata.vulnerabilities.critical // 0' audit-report.json)
            MODERATE=$(jq -r '.metadata.vulnerabilities.moderate // 0' audit-report.json)
            LOW=$(jq -r '.metadata.vulnerabilities.low // 0' audit-report.json)
            
            echo "high=$HIGH" >> $GITHUB_OUTPUT
            echo "critical=$CRITICAL" >> $GITHUB_OUTPUT
            echo "moderate=$MODERATE" >> $GITHUB_OUTPUT
            echo "low=$LOW" >> $GITHUB_OUTPUT
            
            # Create summary
            echo "## Dependency Audit Summary" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
            echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| Critical | $CRITICAL |" >> $GITHUB_STEP_SUMMARY
            echo "| High     | $HIGH |" >> $GITHUB_STEP_SUMMARY
            echo "| Moderate | $MODERATE |" >> $GITHUB_STEP_SUMMARY
            echo "| Low      | $LOW |" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Upload audit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-audit-report
          path: audit-report.json
          retention-days: 30
      
      - name: Comment on PR
        if: github.event_name == 'pull_request' && steps.audit.outputs.status == 'fail'
        uses: actions/github-script@v8
        with:
          script: |
            const high = '${{ steps.parse.outputs.high }}';
            const critical = '${{ steps.parse.outputs.critical }}';
            
            if (critical > 0 || high > 0) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## ⚠️ Dependency Security Alert\n\nThis PR introduces dependencies with security vulnerabilities:\n\n- **Critical**: ${critical}\n- **High**: ${high}\n\nPlease review and address these vulnerabilities before merging.\n\nRun \`pnpm audit\` locally for details.`
              });
            }
      
      - name: Fail on critical vulnerabilities
        if: steps.parse.outputs.critical > 0
        run: |
          echo "::error::Found ${{ steps.parse.outputs.critical }} critical vulnerabilities"
          exit 1
      
      - name: Warn on high vulnerabilities
        if: steps.parse.outputs.high > 0
        run: |
          echo "::warning::Found ${{ steps.parse.outputs.high }} high vulnerabilities"
          # Don't fail the build for high vulnerabilities, but warn
          exit 0
